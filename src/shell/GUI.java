/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shell;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.InputStream;
import util.BasicData;

/**
 *
 * @author Javier Riveros <walter.riveros@unillanos.edu.co>
 */
public class GUI extends javax.swing.JFrame {

  private BasicData basicData;
  private int caretPosition;

  /**
   * Creates new form GUI
   */
  public GUI() {
    initComponents();

    //
    this.basicData = new BasicData();
    setWindowProperties();
    setShellProperties();
    setCaretPosition();
  }

  private void setWindowProperties() {
    setLocationRelativeTo(null);
    setTitle("Shell ".concat(System.getProperty("os.name").contains("Windows") ? "Windows" : "Linux"));

    this.shellPreferencesDialog.setLocationRelativeTo(null);
    this.shellPreferencesDialog.setSize(300, 100);
  }

  private void setCaretPosition() {
    this.caretPosition = this.shellTextarea.getText().lastIndexOf("$") + 2;
    this.shellTextarea.setCaretColor(Color.GREEN);

    this.shellTextarea.setCaretPosition(caretPosition);
  }

  private void setShellProperties() {
    this.shellTextarea.setBorder(null);
    this.shellTextareaScroll.setBorder(null);
    this.shellPane.setBorder(null);
    this.shellTextarea.setFont(loadShellFont());

    setShellText();
  }

  private Font loadShellFont() {
    Font font;
    String fontName = "resources/FiraCode-Regular.ttf";

    try {
      InputStream is = getClass().getResourceAsStream(fontName);
      font = Font.createFont(Font.TRUETYPE_FONT, is).deriveFont(17f);

    } catch (FontFormatException | IOException ex) {
      font = new Font("Consolas", Font.BOLD, 14);
    }
    return font;
  }

  private void setShellText() {
    this.shellTextarea.setText(this.basicData.getInitMessage());
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    shellPreferencesDialog = new javax.swing.JDialog();
    jPanel1 = new javax.swing.JPanel();
    jComboBox1 = new javax.swing.JComboBox<>();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    shellPane = new javax.swing.JPanel();
    shellTextareaScroll = new javax.swing.JScrollPane();
    shellTextarea = new javax.swing.JTextArea();
    jMenuBar1 = new javax.swing.JMenuBar();
    jMenu1 = new javax.swing.JMenu();
    jMenuItem1 = new javax.swing.JMenuItem();
    jMenu2 = new javax.swing.JMenu();
    jMenuItem2 = new javax.swing.JMenuItem();

    shellPreferencesDialog.setTitle("Shell Preferences");
    shellPreferencesDialog.setLocationByPlatform(true);
    shellPreferencesDialog.setModal(true);

    jPanel1.setBorder(null);
    jPanel1.setInheritsPopupMenu(true);

    jComboBox1.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dark", "Light" }));
    jComboBox1.setBorder(null);

    jButton1.setText("Save");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    jButton2.setText("Cancel");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
      }
    });

    jLabel1.setText("Shell Theme");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(99, Short.MAX_VALUE))
          .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addGap(0, 0, Short.MAX_VALUE))))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jButton1)
          .addComponent(jButton2))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout shellPreferencesDialogLayout = new javax.swing.GroupLayout(shellPreferencesDialog.getContentPane());
    shellPreferencesDialog.getContentPane().setLayout(shellPreferencesDialogLayout);
    shellPreferencesDialogLayout.setHorizontalGroup(
      shellPreferencesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    shellPreferencesDialogLayout.setVerticalGroup(
      shellPreferencesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("S");

    shellTextarea.setBackground(new java.awt.Color(0, 43, 54));
    shellTextarea.setColumns(20);
    shellTextarea.setFont(new java.awt.Font("DejaVu Sans", 0, 48)); // NOI18N
    shellTextarea.setForeground(new java.awt.Color(255, 255, 255));
    shellTextarea.setLineWrap(true);
    shellTextarea.setRows(5);
    shellTextarea.addCaretListener(new javax.swing.event.CaretListener() {
      public void caretUpdate(javax.swing.event.CaretEvent evt) {
        shellTextareaCaretUpdate(evt);
      }
    });
    shellTextarea.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        shellTextareaKeyPressed(evt);
      }
    });
    shellTextareaScroll.setViewportView(shellTextarea);

    javax.swing.GroupLayout shellPaneLayout = new javax.swing.GroupLayout(shellPane);
    shellPane.setLayout(shellPaneLayout);
    shellPaneLayout.setHorizontalGroup(
      shellPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(shellTextareaScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
    );
    shellPaneLayout.setVerticalGroup(
      shellPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(shellTextareaScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
    );

    jMenu1.setText("File");

    jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
    jMenuItem1.setMnemonic('C');
    jMenuItem1.setText("Exit");
    jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem1ActionPerformed(evt);
      }
    });
    jMenu1.add(jMenuItem1);

    jMenuBar1.add(jMenu1);

    jMenu2.setText("Edit");

    jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
    jMenuItem2.setText("Shell Settings");
    jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem2ActionPerformed(evt);
      }
    });
    jMenu2.add(jMenuItem2);

    jMenuBar1.add(jMenu2);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(shellPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(shellPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void shellTextareaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_shellTextareaCaretUpdate
    int cp = this.shellTextarea.getCaretPosition();
    
    this.shellTextarea.setEditable(cp >= this.caretPosition-1);
  }//GEN-LAST:event_shellTextareaCaretUpdate

  private void shellTextareaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_shellTextareaKeyPressed
    
    if (this.shellTextarea.getCaretPosition() == this.caretPosition && 
            evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)
      evt.consume();
    
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
      String command = this.shellTextarea.getText().substring(this.caretPosition);

      if (command.equals("limpiar")) {
        this.shellTextarea.setText(basicData.getInitMessage());
        setCaretPosition();
        return;
      }
      
      showOnShell(basicData.processCommand(command));
      evt.consume();
    }
  }//GEN-LAST:event_shellTextareaKeyPressed

  private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    System.exit(0);
  }//GEN-LAST:event_jMenuItem1ActionPerformed

  private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
    this.shellPreferencesDialog.setVisible(true);
  }//GEN-LAST:event_jMenuItem2ActionPerformed

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    this.shellPreferencesDialog.setVisible(false);
  }//GEN-LAST:event_jButton2ActionPerformed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    setShellTheme(this.jComboBox1.getSelectedIndex());
    this.shellPreferencesDialog.dispose();
  }//GEN-LAST:event_jButton1ActionPerformed

  private void showOnShell(String str) {
    this.shellTextarea.append("\n" + str + "\n");
    this.shellTextarea.append(this.basicData.getInitMessage());
    setCaretPosition();
  }
  
  private void setShellTheme(int theme) {
    switch (theme) {
      case 0:
        this.shellTextarea.setBackground(Color.decode("#002B36"));
        this.shellTextarea.setForeground(Color.white);
        
        break;
      case 1:
        this.shellTextarea.setBackground(Color.white);
        this.shellTextarea.setForeground(Color.decode("#002B36"));
        
        break;
    }
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JComboBox<String> jComboBox1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JMenu jMenu1;
  private javax.swing.JMenu jMenu2;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JMenuItem jMenuItem1;
  private javax.swing.JMenuItem jMenuItem2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel shellPane;
  private javax.swing.JDialog shellPreferencesDialog;
  private javax.swing.JTextArea shellTextarea;
  private javax.swing.JScrollPane shellTextareaScroll;
  // End of variables declaration//GEN-END:variables
}
